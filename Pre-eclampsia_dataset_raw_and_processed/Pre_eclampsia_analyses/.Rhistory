#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
#color = ~regulation,  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = ~regulation,  # Use regulation column for colors
colors = c("red4", "gray2","blue4"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = ~regulation,  # Use regulation column for colors
#colors = c("red4", "gray2","blue4"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
#color = ~regulation,  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
# Create the volcano plot (all values, will ignore NAs)
Gene_raw_volcano_plot <- plot_ly(
data = resGene_tib,
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(size = 6, opacity = 0.5),
color = ~regulation,  # Use regulation column for colors
colors = c("darkred", "lightgray","skyblue3"),  # Light gray for not significant, red for significant and downregulated, blue for significant and  upregulated
type = 'scatter',
hoverinfo = 'text'
) |>
plotly::layout(
title = paste("DEGs from my DESeq2data (", plottable_points, " points plotted)", sep = ""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation"))
)
Gene_raw_volcano_plot
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
#color = ~regulation,  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap), "./plots/Gene_raw_volcano_overlap.html")
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_plot), "./plots/Gene_raw_volcano_plot.html")
# Create a plot that has persistent labels for the data points associated with these genes
Gene_raw_volcano_overlap_labels <- Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 7,
ax = 20,
ay = -40
)
Gene_raw_volcano_overlap_labels
Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 3,
ax = 20,
ay = -40
)
Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 1,
ax = 20,
ay = -40
)
Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = FALSE,
arrowhead = 1,
ax = 20,
ay = -40
)
Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 1,
ax = 20,
ay = -40
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap_labels), "./plots/Gene_raw_volcano_overlap_labels.html")
# Define paths
source_folder <- "./plots"
destination_folder <- "./results/Shiny_app_DESeq2_results/www"
# Copy files from source to destination
file.copy(list.files(source_folder, full.names = TRUE), destination_folder, overwrite = TRUE)
Gene_raw_volcano_overlap <- Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = TRUE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap), "./plots/Gene_raw_volcano_overlap.html")
# Create a plot that has persistent labels for the data points associated with these genes
Gene_raw_volcano_overlap_labels <- Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 1,
ax = 20,
ay = -40
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap_labels), "./plots/Gene_raw_volcano_overlap_labels.html")
# Define paths
source_folder <- "./plots"
destination_folder <- "./results/Shiny_app_DESeq2_results/www"
# Copy files from source to destination
file.copy(list.files(source_folder, full.names = TRUE), destination_folder, overwrite = TRUE)
runApp('results/Shiny_app_DESeq2_results')
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = FALSE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_overlap <- Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = FALSE
) |>
layout(
title = paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap), "./plots/Gene_raw_volcano_overlap.html")
# Create a plot that has persistent labels for the data points associated with these genes
Gene_raw_volcano_overlap_labels <- Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 1,
ax = 20,
ay = -40
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap_labels), "./plots/Gene_raw_volcano_overlap_labels.html")
# Define paths
source_folder <- "./plots"
destination_folder <- "./results/Shiny_app_DESeq2_results/www"
# Copy files from source to destination
file.copy(list.files(source_folder, full.names = TRUE), destination_folder, overwrite = TRUE)
runApp('results/Shiny_app_DESeq2_results')
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = FALSE
) |>
layout(
title = list(
paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
font = list(size = 14),  # Font size of the title
y = 0.95,  # Adjust vertical position (closer to 1 moves it further above the plot area)
x = 0.5,  # Center the title horizontally
xanchor = "center",  # Anchor title at the center
yanchor = "top"  # Anchor title at the top
),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
Gene_raw_volcano_overlap <- Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = FALSE
) |>
layout(
title = list(
paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
font = list(size = 14),  # Font size of the title
y = 0.95,  # Adjust vertical position (closer to 1 moves it further above the plot area)
x = 0.5,  # Center the title horizontally
xanchor = "center",  # Anchor title at the center
yanchor = "top"  # Anchor title at the top
),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
# export plot as html file with htmlwidgets
saveWidget(as_widget(Gene_raw_volcano_overlap), "./plots/Gene_raw_volcano_overlap.html")
# Create a plot that has persistent labels for the data points associated with these genes
Gene_raw_volcano_overlap_labels <- Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 1,
ax = 20,
ay = -40
)
Gene_raw_volcano_overlap |>
layout(title = paste("Overlap publication DEGs with my DEGs.\nPersistent labels = validated in publication.\nDark center = reported in publication", sep="")) |>
add_annotations(
x = points_to_label$log2FoldChange,
y = points_to_label$`-log10padj`,
text = points_to_label$gene,
showarrow = TRUE,
arrowhead = 1,
ax = 20,
ay = -40
)
# Define paths
source_folder <- "./plots"
destination_folder <- "./results/Shiny_app_DESeq2_results/www"
Gene_raw_volcano_plot |>
add_trace(
data = resGene_tib[resGene_tib$inPublication == TRUE, ],
x = ~log2FoldChange,
y = ~`-log10padj`,
text = ~gene,  # Text to show on hover
mode = 'markers',
marker = list(
size = 2.5,  # Adjust point size
color = 'black',  # Use regulation column for colors
#colors = c("darkred", "lightgray","skyblue3"),
#stroke = list(width = 1.5, color='cyan'),
opacity = 1
),
hoverinfo = 'text',
showlegend = FALSE
) |>
layout(
title = list(
paste("Overlap publication DEGs with my DEGs.\nDark center = reported in publication", sep=""),
font = list(size = 12),  # Font size of the title
y = 1,  # Adjust vertical position (closer to 1 moves it further above the plot area)
x = 0.5,  # Center the title horizontally
xanchor = "center",  # Anchor title at the center
yanchor = "top"  # Anchor title at the top
),
xaxis = list(title = "Log2(Fold Change)"),
yaxis = list(title = "-Log10(Adjusted P-Value (FDR))"),
legend = list(title = list(text = "Regulation and Dataset"))
)
runApp('results/Shiny_app_DESeq2_results')
rsconnect::deployApp()
runApp('results/Shiny_app_DESeq2_results')
rsconnect::deployApp('.results/Shiny_app_DESeq2_results')
rsconnect::deployApp('results/Shiny_app_DESeq2_results')
pacman::p_load(DESeq2,
tximport,
readr,
readxl,
plotly,
conflicted,
tidyverse,
ggplot2,
EBSeq,
htmlwidgets,
rsconnect)
conflict_scout()
conflicts_prefer(dplyr::filter,
plotly::layout)
